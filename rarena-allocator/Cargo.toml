[package]
name = "rarena-allocator"
version = "0.4.20"
edition.workspace = true
repository.workspace = true
homepage = "https://github.com/al8n/rarena/tree/main/rarena-allocator"
documentation = "https://docs.rs/rarena-allocator"
description = "Lock-free ARENA allocator which can be used in both memory and on-disk."
license.workspace = true
rust-version.workspace = true
categories = ["data-structures", "memory-management", "concurrency", "no-std"]
keywords = ["arena", "lock-free", "allocator"]

[features]
default = ["std"]
alloc = []
std = ["byteorder", "either/default", "dbutils/std", "rustix/std"]
memmap = ["memmap2", "fs4", "std", "bitflags/std"]

loom = ["dep:loom", "std", "crossbeam-utils/loom"]

[dependencies]
bitflags = { version = "2", default-features = false }
byteorder = { version = "1", optional = true }
crossbeam-utils.workspace = true 
dbutils = { version = "0.11", default-features = false, features = ["crc32fast"] }
either = { version = "1", default-features = false }
paste = "1"

fs4 = { version = "0.11", optional = true }
memmap2 = { version = "0.9", optional = true }

loom = { workspace = true, optional = true }
tracing = { version = "0.1", optional = true }

[target.'cfg(not(any(target_family = "wasm", windows)))'.dependencies]
rustix = { version = "0.38", optional = true, features = ["mm", "param"] }

[target.'cfg(windows)'.dependencies]
winapi = { version = "0.3", features = ["winbase", "sysinfoapi"] }

[dev-dependencies]
tempfile = "3"
wg = "0.9"
crossbeam-queue = "0.3"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
crc32fast = "1"
rand = "0.8"

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[lints.rust]
rust_2018_idioms = "warn"
single_use_lifetimes = "warn"
unexpected_cfgs = { level = "warn", check-cfg = [
  'cfg(loom)',
] }